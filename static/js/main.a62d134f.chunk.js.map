{"version":3,"sources":["scenes/Home/index.jsx","scenes/Resume/index.jsx","scenes/Projects/index.jsx","scenes/Blog/index.jsx","App.jsx","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["SkillsList","Header","as","Grid","columns","divided","Row","Column","List","celled","Item","AboutMe","width","Image","src","circular","textAlign","text","Home","Container","pdfjs","GlobalWorkerOptions","workerSrc","version","Resume","props","state","file","numPages","onFileChange","event","setState","target","files","onDocumentLoadSuccess","console","log","this","style","display","justifyContent","alignItems","onLoadSuccess","Array","from","el","index","key","pageNumber","className","Component","MyProject","Group","link","href","size","Content","Description","Projects","BlogItems","Blog","App","activeItem","handleItemClick","e","name","window","location","pathname","substr","fluid","Menu","stackable","tabular","active","onClick","Link","to","Divider","hidden","exact","path","Boolean","hostname","match","router","color","component","root","document","getElementById","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","id"],"mappings":"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","file":"static/js/main.a62d134f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport './index.css';\n\nimport {\n    Image,\n    List,\n    Grid,\n    Container,\n    Header\n} from 'semantic-ui-react';\n\nconst SkillsList = () => (\n    <div>\n        <Header as='h2'><u>Skills</u></Header>\n        <Grid columns={3} divided>\n          <Grid.Row>\n            <Grid.Column>\n                <h3> Languages </h3>\n                <List celled>\n                  <List.Item>\n                    Python\n                  </List.Item>\n                  <List.Item>\n                    C++\n                  </List.Item>\n                  <List.Item>\n                    Javascript\n                  </List.Item>\n                  <List.Item>\n                    SQL\n                  </List.Item>\n                  <List.Item>\n                    Bash\n                  </List.Item>\n                </List>\n            </Grid.Column>\n            <Grid.Column>\n                <h3> Tools </h3>\n                <List celled>\n                    <List.Item>Git SCM</List.Item>\n                    <List.Item>Jira/TMS/Bamboo/Jama</List.Item>\n                    <List.Item>Wireshark</List.Item>\n                    <List.Item>Linux/Windows/Mac</List.Item>\n                    <List.Item>Sublime Text</List.Item>\n                </List>\n            </Grid.Column>\n            <Grid.Column>\n                <h3> Other </h3>\n                <List celled>\n                    <List.Item>TCP/IP</List.Item>\n                    <List.Item>VoIP</List.Item>\n                    <List.Item>WiFi</List.Item>\n                    <List.Item>Packet Analysis</List.Item>\n                    <List.Item>Database Design</List.Item>\n                </List>\n            </Grid.Column>\n          </Grid.Row>\n      </Grid>\n    </div>\n\n)\n\nconst AboutMe = () => (\n    <Grid columns={2}>\n      <Grid.Column width={4}>\n        <Image\n          src={'/me.png'}\n          circular\n        />\n      </Grid.Column>\n      <Grid.Column width={12}>\n        <Header as='h2' textAlign='center'>Hi, I'm Paul Pfeffer</Header>\n        <div text>\n          <p>\n            My current language of choice is Python but I can work in many languages on any part of the stack.\n            I have developed web based tools for enterprise class VoIP systems and recently I have developed SW\n            for consumer grade WiFi access points. I've worked in companies with 2-1000 people.\n          </p>\n          <p>\n             On my free time, I love learning new technologies and automating things in my personal life. I enjoy\n             exploring new places and most of all riding my skateboard. Dogs are cool too.\n          </p>\n          <br/>\n        </div>\n      </Grid.Column>\n    </Grid>\n  )\n\nfunction Home() {\n  return (\n    <Container>\n      <AboutMe />\n      <SkillsList />\n    </Container>\n  );\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport './index.css';\n\nimport { pdfjs, Page, Document } from 'react-pdf';\nimport 'react-pdf/dist/Page/AnnotationLayer.css';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass Resume extends Component {\n\n  constructor(props) {\n    super(props);\n    console.log(this);\n  }\n\n  state = {\n    file: './resume.pdf',\n    numPages: null,\n  }\n\n  onFileChange = (event) => {\n    this.setState({\n      file: event.target.files[0],\n    });\n  }\n\n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages });\n  }\n\n  render() {\n    const { file, numPages } = this.state;\n    console.log(this);\n    // const width = this.container.offsetWidth;\n    return (\n    <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n      <Document\n                  file={file}\n                  onLoadSuccess={this.onDocumentLoadSuccess}\n                >\n                  {\n                    Array.from(\n                      new Array(numPages),\n                      (el, index) => (\n                        <Page\n                          key={`page_${index + 1}`}\n                          pageNumber={index + 1}\n                          className=\"center\"\n                        />\n                      ),\n                    )\n                  }\n      </Document>\n    </div>\n    );\n  }\n}\nexport default Resume;\n","import React, { Component } from 'react';\nimport './index.css';\nimport { Item } from 'semantic-ui-react'\n\nconst MyProject = () => (\n    <Item.Group link>\n      <Item as='a' href=\"https://github.com/RealP/Everpy\">\n        <Item.Image size='tiny' src='/github-icon.png' />\n        <Item.Content>\n          <Item.Header>Everpy</Item.Header>\n          <Item.Description>\n            Enhanced Evernote CLI for Windows.\n          </Item.Description>\n        </Item.Content>\n      </Item>\n\n      <Item as='a' href=\"https://github.com/RealP/Graph-Internet-Speed\">\n        <Item.Image size='tiny' src='/github-icon.png' />\n        <Item.Content>\n          <Item.Header>Graph Internet Speed</Item.Header>\n          <Item.Description>\n            Utility to measure network conditions and graph them over time.\n          </Item.Description>\n        </Item.Content>\n      </Item>\n    </Item.Group>\n\n)\n\nclass Projects extends Component {\n\n\n  render() {\n      return (\n        <MyProject/>\n      );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport { Item } from 'semantic-ui-react'\n\nimport './index.css';\n\nconst BlogItems = () => (\n    <Item.Group link>\n      <Item as='a' href=\"https://www.evernote.com/shard/s284/sh/29897a8a-f634-edd5-49a2-4a2dcc84a1fb/d4b58b2a45c50e9fed4b2370215e6cf3\">\n        <Item.Image size='tiny' src='/evernote-icon.png' />\n        <Item.Content>\n          <Item.Header>Sample Coding Challenges</Item.Header>\n          <Item.Description>\n            Some coding challenges and my process in 2020.\n          </Item.Description>\n        </Item.Content>\n      </Item>\n\n      <Item as='a' href=\"https://www.evernote.com/shard/s284/sh/337c41d8-0dfa-4db3-9537-88aba93fd984/fe0fa1b208c6dbc2c87853e420548d94\">\n        <Item.Image size='tiny' src='/evernote-icon.png' />\n        <Item.Content>\n          <Item.Header>Sublime Text Configuration</Item.Header>\n          <Item.Description>\n            Some sublime setting tips and tricks.\n          </Item.Description>\n        </Item.Content>\n      </Item>\n    </Item.Group>\n\n)\n\nclass Blog extends Component {\n\n  render() {\n      return (\n        <BlogItems/>\n      );\n  }\n}\nexport default Blog;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {\n    Menu,\n    Divider\n} from 'semantic-ui-react';\nimport Home from './scenes/Home';\nimport Resume from './scenes/Resume';\nimport Projects from './scenes/Projects'\nimport Blog from './scenes/Blog'\n\nimport './App.css';\nimport 'semantic-ui-less/semantic.less'\n\n\nexport default class App extends Component {\n  state = { activeItem: 'home' }\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  constructor(props) {\n    super(props);\n    console.log(\"HeaderMenu constructor\");\n    // When reloading on a route we need to set the element\n    if (window.location.pathname.substr(1)) {\n      this.state.activeItem = window.location.pathname.substr(1);\n    }\n  }\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <div className=\"App\">\n        <Router>\n          <div\n          fluid>\n            <Menu stackable tabular>\n              <Menu.Item\n                name='home'\n                active={activeItem === 'home'}\n                onClick={this.handleItemClick}\n                as={Link} to=\"/\"\n              >\n                Home\n              </Menu.Item>\n              <Menu.Item\n                name='blog'\n                active={activeItem === 'blog'}\n                onClick={this.handleItemClick}\n                as={Link} to=\"/blog\"\n              >\n                Blog\n              </Menu.Item>\n              <Menu.Item\n                name='projects'\n                active={activeItem === 'projects'}\n                onClick={this.handleItemClick}\n                as={Link} to=\"/projects\"\n              >\n                Projects\n              </Menu.Item>\n              <Menu.Item\n                name='resume'\n                active={activeItem === 'resume'}\n                onClick={this.handleItemClick}\n                as={Link} to=\"/resume\">\n                Resume\n              </Menu.Item>\n            </Menu>\n\n            <Divider hidden/>\n            {/*\n              A <Switch> looks through all its children <Route>\n              elements and renders the first one whose path\n              matches the current URL. Use a <Switch> any time\n              you have multiple routes, but you want only one\n              of them to render at a time\n            */}\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/blog\">\n                <Blog />\n              </Route>\n              <Route path=\"/projects\">\n                <Projects />\n              </Route>\n              <Route path=\"/resume\">\n                <Resume />\n              </Route>\n              <Route path=\"/*\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n\n        </Router>\n      </div>\n    );\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport { render } from 'react-snapshot';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'semantic-ui-less/semantic.less'\n\n\nconst router = (\n    <Router color=\"primaryColor\">\n        <div>\n            <Route exact path={'/*'} component={App} />\n        </div>\n    </Router>\n);\n\nconst root = document.getElementById('root');\n\nif (root) {\n\n    render(router, root);\n\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 70;"],"sourceRoot":""}